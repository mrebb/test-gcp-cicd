steps:
 # This step install npm packages
  - name: 'gcr.io/cloud-builders/npm'
    id: 'Install dependencies'
    args: ['install']

  # - name: 'gcr.io/cloud-builders/npm'
  #   id: 'Lint'
  #   args: ['run', 'lint']

  # This step runs the unit tests on the app
  - name: 'gcr.io/cloud-builders/npm'
    id: 'Test'
    args: ['run', 'test']

  # This step builds the container image.
  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    args:
    - 'build'
    - '-t'
    - 'gcr.io/$PROJECT_ID/gcp-cicd-demo:$SHORT_SHA'
    - '.'

#   # This step pushes the image to Container Registry
#   # The PROJECT_ID and SHORT_SHA variables are automatically
#   # replaced by Cloud Build.
#   - name: 'gcr.io/cloud-builders/docker'
#     id: Push
#     args:
#     - 'push'
#     - 'gcr.io/$PROJECT_ID/gcp-cicd-demo:$SHORT_SHA'

#   - name: 'gcr.io/cloud-builders/docker'
#     id: 'Build deployable image (latest tag)'
#     args: ['build', '-t', 'gcr.io/$PROJECT_ID/gcp-cicd-demo:latest', '.']
    
#   - name: 'gcr.io/cloud-builders/docker'
#     id: 'Push deployable image (latest tag)'
#     args: ['push', 'gcr.io/$PROJECT_ID/gcp-cicd-demo:latest']
    
# images:
#   - 'gcr.io/$PROJECT_ID/gcp-cicd-demo:$SHORT_SHA'
#   - 'gcr.io/$PROJECT_ID/gcp-cicd-demo:latest'

  # - name: 'gcr.io/cloud-builders/kubectl'
  #   id: Set
  #   args:
  #   - set
  #   - image
  #   - deployment
  #   - container=gcr.io/$PROJECT_ID/gcp-cicd-demo:$SHORT_SHA
  #   env:
  #   - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  #   - 'CLOUDSDK_CONTAINER_CLUSTER=hpe-dev-cluster'
  # - name: 'gcr.io/cloud-builders/render'
  #   entrypoint: 'bash'
  #   args:
  #   - '-c'
  #   - |
  #       /render -f /workspace/kubernetes.yml -var sha=$COMMIT_SHA -o /workspace
  #       cat /workspace/workspace/kubernetes.yml

  # This step deploys the new version of our container image
  # in the hpe-dev-cluster Kubernetes Engine cluster.
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Deploy
    args:
    - 'apply'
    - '-f'
    - 'kubernetes.yml'
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=hpe-dev-cluster'

  # - name: 'gcr.io/cloud-builders/npm'
  #   id: 'Build'
  #   args: ['run', 'build', '--', '--output-path', 'dist/html']
    # env:
    #   - 'BUILD_ID=$BUILD_ID'

#   # Build snapshot images and push them to Cloud Registry

#   - name: 'gcr.io/cloud-builders/docker'
#     id: 'Build deployable image (commit tag)'
#     args: ['build', '-t', 'gcr.io/$PROJECT_ID/xlayers:$SHORT_SHA', '.']
#   - name: 'gcr.io/cloud-builders/docker'
#     id: 'Push deployable image (commit tag)'
#     args: ['push', 'gcr.io/$PROJECT_ID/xlayers:$SHORT_SHA']
#   - name: 'gcr.io/cloud-builders/docker'
#     id: 'Build deployable image (latest tag)'
#     args: ['build', '-t', 'gcr.io/$PROJECT_ID/xlayers:latest', '.']
#   - name: 'gcr.io/cloud-builders/docker'
#     id: 'Push deployable image (latest tag)'
#     args: ['push', 'gcr.io/$PROJECT_ID/xlayers:latest']

#   # Patch a new Ingress ressource for the build $SHORT_SHA

#   - name: 'google/cloud-sdk:slim'
#     id: 'Generate a new Ingress Ressource, Service and Deployment'
#     entrypoint: 'sh'
#     args:
#       - '-c'
#       - |
#         perl -pe "s/_SHORT_SHA_/$SHORT_SHA/g" scripts/cloudbuild/xlayers.template.yaml > xlayers.$SHORT_SHA.yaml

#   # Apply a new Ingress ressource for the build $SHORT_SHA

#   - name: 'gcr.io/cloud-builders/kubectl'
#     id: 'Apply Kubectl configuration'
#     args:
#       - 'apply'
#       - '-f'
#       - 'xlayers.$SHORT_SHA.yaml'
#     env:
#       - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
#       - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-small'

# images:
#   - 'gcr.io/$PROJECT_ID/xlayers:$SHORT_SHA'
#   - 'gcr.io/$PROJECT_ID/xlayers:latest'